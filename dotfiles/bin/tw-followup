#!/usr/bin/env python3
import argparse
import json
import subprocess

parser = argparse.ArgumentParser()
parser.add_argument('id')
parser.add_argument('add_args', nargs=argparse.REMAINDER)

args = parser.parse_args()

template = json.loads(subprocess.run(['task', args.id, 'export'], capture_output=True).stdout.decode('utf-8'))[0]
for forbidden in ['id', 'uuid', 'description', 'entry', 'modified', 'status', 'urgency', 'wait', 'depends', 'annotations']:
    template.pop(forbidden, None)

template_args = [f"depends:{args.id}"]
for k, v in template.items():
    if k == "tags":
        template_args.extend(f"+{tag}" for tag in v)

    elif type(v) == str:
        template_args.append(f"{k}:{v}")

    else:
        raise Exception(f"Unknown template thing: {k}, {v}")

subprocess.run(['task', 'add', *args.add_args, *template_args])
